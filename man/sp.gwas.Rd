% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sp.gwas.R
\name{sp.gwas}
\alias{sp.gwas}
\title{Selection probabilities using generalized linear model with regularization for a SNP data in the hapmap format.}
\usage{
sp.gwas(genotype = NULL, phenotype = NULL, input.type = c("object",
  "path"), save.path = "./sp.folder", y.col = 2, y.id.col = 1,
  normalization = TRUE, method = "lasso", family = "gaussian",
  Falsediscovery = c(1, 5, 10), plot.ylim = NULL,
  lambda.min.quantile = 0.5, n.lambda = 10, K = 100, psub = 0.5,
  manhattan.type = "c", plot.name = "", plot.type = "jpg",
  plot.dpi = 300)
}
\arguments{
\item{genotype}{Either R object or file path can be considered. A genotype data is a \code{p} by \code{(n+11)} matrix. It is formatted by hapmap which has (rs, allele, chr, pos) in the first four(1-4) columns, (strand, assembly, center, protLSID, assayLSID, panel, Qcode) in the following seven(5-11) columns. If NULL, user can choose a path in interactive use.}

\item{phenotype}{Either R object or file path can be considered. A phenotype data is an \code{n} by \code{p} matrix. Since the first some columns can display attributes of the phenotypes, you should enter the arguments, y.col and y.id.col, which represent the columns of phenotypes to be analyzed and the column of sample ID. If NULL, user can choose a path in interactive use.}

\item{input.type}{Default is "object". If \code{input.type} is "object", obejects of genotype/phenotype will be entered, and if "path", paths of genotype/phenotype will be enterd. If you want to use an object, you have to make sure that the class of each column of genotype data is equal to "character".}

\item{save.path}{A save.path which has all output files. If there exists save.path, sp.gwas will check if there is an output file. Note that if there is an output RData file in "save.path", sp.gwas will just load the output files(.RData) in there, thereby not providing the results for new "genotype" and "phenotype".}

\item{y.col}{The columns of phenotypes. At most 4 phenotypes can be considered, because the plot of them will be fine. Default is 2.}

\item{y.id.col}{The column of sample ID in the phenotype data file. Default is 1.}

\item{normalization}{If TRUE. phenotypes are converted to be normal-shape using box-cox transformation when all phenotypes are positive.}

\item{method}{A method of penalized regression. It includes "lasso" for the lasso and "enet" for the elastic-net.}

\item{family}{A family of response variable(phenotype). It is "gaussian" for continuous response variable, "binomial" for binary, "poisson" for count, etc. Now you can use only the same family for the multi phenotypes. For more details, see the function(\code{stats::glm}). Default is "gaussian".}

\item{Falsediscovery}{The expected number of false discovery to be controlled. The larger it is, the higher threshold becomes. Default is c(1, 5, 10).}

\item{plot.ylim}{A range of the y-axis. If NULL, automatic range in the y-axis will be provided. For plot.ylim=c(0,1), the y-axis has a range of 0 and 1.}

\item{lambda.min.quantile}{A range of lambda sequence. Default is 0.5 (median). If the range is so small that it can have many tied selection probabilities which is 1. To handle with this problem, you should increase the value of "lambda.min.quantile".}

\item{n.lambda}{The length of lambda sequence. The larger n.lambda, the more detailed lambda sequence will be.}

\item{K}{The number of iterations in resampling when calculating the selection probabilities.}

\item{psub}{The subsampling proportion. For efficiency, default is 0.5.}

\item{manhattan.type}{A type of manhattan plot to be drawn includes circular('c') and rectangular('m').}

\item{plot.name}{A name of plot file.}

\item{plot.type}{A type of plot file which includes "jpg", "pdf", "tiff", etc.}

\item{plot.dpi}{A resolution of plot. If you want to get a high-resolution image, plot.dpi should be large.}
}
\value{
\item{Histogram of original and transformed phenotypes}{Histogram of phenotypes with p-value by Shapiro-test on the top right corner.}
    \item{myDATA}{A list of myX, myGD, myGM, myGT, myY, and myY.original(for "gaussian").}
    \item{sp.res}{A list of sp.df and threshold.}
    \item{Circular Manhattan plot}{Manhattan plot for the first phenotype is the innermost circle. Colors for chromosome is fixed, so that if you want to change colors, you would edit the R code of sp.manhattan function.}

The dataframe with new mean and sum columns
}
\description{
For analysis of high-dimensional genomic data, penalized regression can be a solution to accomodate correlations between predictors. Moreover, selection probabilities do not depend on tuning parameter selection so that it produces a stablity selection. Thresholds are also generated to control the false positives(errors). Thresholds vary with the expected number of false positives to be controlled by the user.
Input data is the hapmap formatted SNP data and phenotype data corresponding to SNP data.
Output includes files of three types: (1) Matched data files (genotype, numerical, snp info, and phenotype), (2) Results file (selection probabilities and thresholds), (3) Circular manhattan plot with (blue dotted) significant line corresponding to the largest value among user-defined false discoveries.
}
\details{
The penalty function of \code{elastic-net} is defined as \deqn{\alpha||\beta||_1+(1-\alpha)||\beta||_2/2,} where \eqn{\alpha} is a mixing proportion of ridge and the lasso, and \eqn{\beta} is regression coefficients. This penalty is equivalent to the Lasso penalty if \code{alpha=1}. \cr \cr
\code{An algorithm of selection probabilities with elastic-net.} \cr \cr
0 : Let us assume that a genomic data has \code{n} samples and \code{p} variables. \cr
1 : For all \eqn{\Lambda=(\alpha, \lambda)}, where \eqn{\alpha in [0,1]}, \eqn{\lambda>0}. \cr
2 : \code{for} k=1 to K \code{do}. \cr
3 : ------- Subsample \eqn{I_k} with size \eqn{[n/2].} \cr
4 : ------- Compute \eqn{\hat{\beta}_j^{\Lambda}(I_k)} with regularization model. \cr
5 : \code{end for.} \cr
6 : \eqn{SP_j^\Lambda = \frac{1}{K}\#\{k\le K: \hat{\beta}_j^\Lambda(I_k) \ne 0 \}. } \cr
7 : \eqn{SP_j =  \max_\Lambda SP_j^\Lambda, ~~j=1,\cdots, p.} \cr
8 : \code{return} \code{SP}=\eqn{(SP_1, \cdots, SP_p).} \cr
}
\examples{
genotype <- sp.gwas::genotype # load("genotype.rda")
phenotype <- sp.gwas::phenotype # load("phenotype.rda")

sp.gwas(genotype = genotype, 
        phenotype = phenotype, 
        input.type = c("object", "path")[1], 
        save.path = "./EXAMPLE",
        y.id.col = 1, 
        y.col = 2:4, 
        normalization = FALSE, 
        method="lasso",
        family="gaussian",
        Falsediscovery = c(1,5,10),
        plot.ylim = NULL,
        lambda.min.quantile = 0.5,
        n.lambda = 10,
        K = 100,
        psub = 0.5,
        manhattan.type = c("c", "r")[1],
        plot.name = "Test",
        plot.type = "jpg",
        plot.dpi = 300)

results <- readxl::read_xlsx("./EXAMPLE/[2]sp.results.xlsx")
class(results$chr) <- "numeric"
class(results$pos) <- "numeric"
thresholds <- readxl::read_xlsx("./EXAMPLE/[2]sp.thresholds.xlsx")
highlight1 <- results$rs[results$v1>thresholds$v1[1]]
highlight10 <- setdiff( results$rs[results$v1>thresholds$v1[3]], highlight1 )

jpeg("./EXAMPLE/Manhattan_from_qqman.jpeg", width=12, height=5, unit="in", res=600)
qqman_manhattan(results,
                chr="chr", bp="pos", snp="rs", p="v1", logp=FALSE, 
                suggestiveline = thresholds$v1[1],
                genomewideline = thresholds$v1[3],
                highlight = list(highlight1, highlight10),
                col.highlight = c("blue", "red"),
                ylab="Selection probabilities", ylim=c(0,1))
dev.off()


}
\author{
Kipoong Kim <kkp7700@gmail.com>
}
